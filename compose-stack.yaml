services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    user: root
    restart: unless-stopped
    ports:
      - "8000:8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    depends_on:
      - prometheus
      - loki
      - jaeger

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: :9411
      COLLECTOR_OTLP_ENABLED: true
   
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    depends_on:
      - jaeger
      - prometheus 
  
  user-management-postgres:
    image: postgres:16.0
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: testUser
      POSTGRES_PASSWORD: Test1234!
      POSTGRES_DB: testDb

  rabbitMq:
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  media-service-mongo:
    image: mongo
    ports:
      - "27017:27017"

  user-interaction-postgres:
    image: postgres:16.0
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: testUser
      POSTGRES_PASSWORD: Pass1234!
      POSTGRES_DB: testDb

  social-graph-neo4j:
    image: neo4j:5.23
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${SOCIAL_NEO4J_AUTH}

  feed-service-neo4j:
    image: neo4j:5.23
    ports:
      - "7475:7474"
      - "7688:7687"
    environment:
      - NEO4J_AUTH=${FEED_NEO4J_AUTH}

  user-management:
    image: mqsr/zylo-user-management:2.0.0
    depends_on:
      - user-management-postgres
      - rabbitMq
      - redis
      - jaeger
      - otel-collector
    ports:
      - '8080:8080'
      - '50051:50051'
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
    env_file:
      - .env

  media-service:
    image: mqsr/zylo-media-service:2.0.0
    depends_on:
      - media-service-mongo
      - rabbitMq
      - redis
      - otel-collector
      - jaeger
    ports:
      - '8082:8080'
      - '50052:50051'
    environment:
      "APP_ENV": "production"
    env_file:
      - .env

  user-interaction:
    image: mqsr/zylo-user-interaction:2.0.0
    depends_on:
      - user-interaction-postgres
      - otel-collector
      - rabbitMq
      - redis
      - jaeger
    ports:
      - '8083:8080'
      - '50053:50051'
    environment:
      "APP_ENV": "production"
    env_file:
      - .env

  social-graph:
    image: mqsr/zylo-social-graph:2.0.0
    depends_on:
      - social-graph-neo4j
      - rabbitMq
      - redis
      - otel-collector
      - jaeger
    ports:
      - '8081:8080'
      - '50054:50051'
    environment:
      ENVIRONMENT: Production
    env_file:
      - .env

  feed-service:
    image: mqsr/zylo-feed-service:2.0.0
    depends_on:
      - feed-service-neo4j
      - rabbitMq
      - redis
    ports:
      - '50055:50051'
    environment:
      ENVIRONMENT: Production
    env_file:
      - .env  
      
  aggregator-service:
    image: mqsr/zylo-aggregator-service:1.0.0
    depends_on:
      - user-management
      - user-interaction
      - social-graph
      - feed-service
      - media-service
    ports:
      - '8085:8080'
    environment:
      APP_ENV: Production
    env_file:
      - .env

  notification-service:
    image: mqsr/zylo-notification-service:1.0.0
    depends_on:
      - rabbitMq
      - redis
    ports:
      - '8095:8080'
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
    env_file:
      - .env

  envoy:
    image: envoyproxy/envoy:distroless-v1.33-latest
    ports:
      - "10000:10000"
      - "9901:9901"
    volumes:
      - ./envoy-override.yaml:/etc/envoy/envoy.yaml