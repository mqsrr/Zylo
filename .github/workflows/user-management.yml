name: Build And Test User Management

on:
  push:
    branches:
      - main
    paths:
      - 'src/user-management/**'
      - '.github/workflows/user-management.yml'
    tags:
      - 'user-management/v*.*.*'
  pull_request:
    branches:
      - main
    paths:
      - 'src/user-management/**'
      - '.github/workflows/user-management.yml'

permissions:
  contents: read
  security-events: write
  actions: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/user-management
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Restore dependencies
        run: dotnet restore UserManagement/UserManagement.csproj

      - name: Build
        run: dotnet build UserManagement/UserManagement.csproj --no-restore --configuration Release
  
  security-scan:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/user-management
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.USER_MANAGEMENT_DOCKER_IMAGE }}
          tags: |
            type=match,pattern=user-management/v?(\d+\.\d+\.\d+(-[a-zA-Z]+\.\d+)?)$,group=1
            type=match,pattern=user-management/v?(\d+\.\d+)\.\d+$,group=1,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') }}
            type=match,pattern=user-management/v?(\d+)\.\d+\.\d+$,group=1,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') }}
            type=sha
            type=raw,value=latest,enable=${{ (github.event.repository.default_branch == github.ref_name || startsWith(github.ref, 'refs/tags/')) && !contains(github.ref_name, '-') }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: src/user-management/Dockerfile
          context: src/user-management
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ fromJSON(steps.meta.outputs.json).tags[0] }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
