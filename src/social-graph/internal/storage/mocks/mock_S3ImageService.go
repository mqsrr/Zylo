// Code generated by mockery v2.46.0. DO NOT EDIT.

package storage

import (
	context "context"

	types "github.com/mqsrr/zylo/social-graph/internal/types"
	mock "github.com/stretchr/testify/mock"
)

// MockS3ImageService is an autogenerated mock type for the S3ImageService type
type MockS3ImageService struct {
	mock.Mock
}

type MockS3ImageService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockS3ImageService) EXPECT() *MockS3ImageService_Expecter {
	return &MockS3ImageService_Expecter{mock: &_m.Mock}
}

// GetPresignedUrl provides a mock function with given fields: ctx, key
func (_m *MockS3ImageService) GetPresignedUrl(ctx context.Context, key string) (*types.FileMetadata, error) {
	ret := _m.Called(ctx, key)

	if len(ret) == 0 {
		panic("no return value specified for GetPresignedUrl")
	}

	var r0 *types.FileMetadata
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*types.FileMetadata, error)); ok {
		return rf(ctx, key)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *types.FileMetadata); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.FileMetadata)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockS3ImageService_GetPresignedUrl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPresignedUrl'
type MockS3ImageService_GetPresignedUrl_Call struct {
	*mock.Call
}

// GetPresignedUrl is a helper method to define mock.On call
//   - ctx context.Context
//   - key string
func (_e *MockS3ImageService_Expecter) GetPresignedUrl(ctx interface{}, key interface{}) *MockS3ImageService_GetPresignedUrl_Call {
	return &MockS3ImageService_GetPresignedUrl_Call{Call: _e.mock.On("GetPresignedUrl", ctx, key)}
}

func (_c *MockS3ImageService_GetPresignedUrl_Call) Run(run func(ctx context.Context, key string)) *MockS3ImageService_GetPresignedUrl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockS3ImageService_GetPresignedUrl_Call) Return(_a0 *types.FileMetadata, _a1 error) *MockS3ImageService_GetPresignedUrl_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockS3ImageService_GetPresignedUrl_Call) RunAndReturn(run func(context.Context, string) (*types.FileMetadata, error)) *MockS3ImageService_GetPresignedUrl_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockS3ImageService creates a new instance of MockS3ImageService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockS3ImageService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockS3ImageService {
	mock := &MockS3ImageService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
